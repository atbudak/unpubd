/// dcli script generated by:
/// dcli create docker_push.dart
///
/// See
/// https://pub.dev/packages/dcli#-installing-tab-
///
/// For details on installing dcli.
///
///
///import 'dart:io';

import 'dart:io';

import 'package:args/command_runner.dart';
import 'package:dcli/dcli.dart';

import '../global_args.dart';
import '../unpubd_paths.dart';
import '../unpubd_settings.dart';
import '../util/log.dart';

///
class UpCommand extends Command<void> {
  ///
  UpCommand();

  @override
  String get description => 'Starts the unpubd daemon.';

  @override
  String get name => 'up';

  @override
  void run() {
    UnpubdSettings.load();
    if (!exists(UnpubdSettings.pathToSettings)) {
      logerr(red('''You must run 'unpubd install' first.'''));
      exit(1);
    }

    if (!ParsedArgs().secureMode) {
      log(orange('Warning: you are running in insecure mode. '
          'Hash files can be modified by any user.'));
    }
    up();
  }

  ///
  void up() {
    /// Create the .env for docker-compose to get its environment from.
    UnpubdPaths().pathToDotEnv
      ..write('MONGO_INITDB_ROOT_USERNAME=root')
      ..append(
          'MONGO_INITDB_ROOT_PASSWORD=${UnpubdSettings().mongoRootPassword}')
      ..append('MONGO_INITDB_DATABASE=${UnpubdSettings().mongoDatabase}')
      ..append('MONGO_DATABASE=${UnpubdSettings().mongoDatabase}')
      ..append('MONGO_USERNAME=${UnpubdSettings().mongoUsername}')
      ..append('MONGO_PASSWORD=${UnpubdSettings().mongoPassword}')
      ..append('MONGO_HOST=mongodb')
      ..append('MONGO_PORT=27017')
      ..append('TZ=${DateTime.now().timeZoneName}')
      ..append('UNPUBD_HOST=${UnpubdSettings().unpubHost}')
      ..append('UNPUBD_PORT=${UnpubdSettings().unpubPort}');

    start();
  }

  Future<void> start() async {
    print('Starting unpubd');
    'docker-compose up'
        .start(workingDirectory: dirname(UnpubdPaths().pathToDockerCompose));
  }
}
